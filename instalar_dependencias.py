"""
Script para instalar depend√™ncias com diferentes m√©todos para resolver problemas de conex√£o.
"""

import subprocess
import sys
import os

def instalar_com_metodo_1():
    """M√©todo 1: Instala√ß√£o com hosts confi√°veis"""
    print("=== M√âTODO 1: Instala√ß√£o com hosts confi√°veis ===")
    try:
        comando = [
            sys.executable, "-m", "pip", "install",
            "--trusted-host", "pypi.org",
            "--trusted-host", "pypi.python.org", 
            "--trusted-host", "files.pythonhosted.org",
            "PyPDF2"
        ]
        subprocess.check_call(comando)
        print("‚úÖ PyPDF2 instalado com sucesso!")
        return True
    except Exception as e:
        print(f"‚ùå Erro: {e}")
        return False

def instalar_com_metodo_2():
    """M√©todo 2: Instala√ß√£o com timeout aumentado"""
    print("=== M√âTODO 2: Instala√ß√£o com timeout aumentado ===")
    try:
        comando = [
            sys.executable, "-m", "pip", "install",
            "--timeout", "300",  # 5 minutos de timeout
            "PyPDF2"
        ]
        subprocess.check_call(comando)
        print("‚úÖ PyPDF2 instalado com sucesso!")
        return True
    except Exception as e:
        print(f"‚ùå Erro: {e}")
        return False

def instalar_com_metodo_3():
    """M√©todo 3: Instala√ß√£o usando mirror alternativo"""
    print("=== M√âTODO 3: Instala√ß√£o usando mirror alternativo ===")
    try:
        comando = [
            sys.executable, "-m", "pip", "install",
            "-i", "https://pypi.tuna.tsinghua.edu.cn/simple/",
            "PyPDF2"
        ]
        subprocess.check_call(comando)
        print("‚úÖ PyPDF2 instalado com sucesso!")
        return True
    except Exception as e:
        print(f"‚ùå Erro: {e}")
        return False

def instalar_com_metodo_4():
    """M√©todo 4: Instala√ß√£o offline (se voc√™ tiver o arquivo .whl)"""
    print("=== M√âTODO 4: Instala√ß√£o offline ===")
    print("Para este m√©todo, voc√™ precisa:")
    print("1. Baixar o arquivo .whl do PyPDF2 de: https://pypi.org/project/PyPDF2/#files")
    print("2. Colocar o arquivo na mesma pasta deste script")
    print("3. Executar: pip install nome_do_arquivo.whl")
    return False

def verificar_instalacao():
    """Verifica se PyPDF2 est√° instalado"""
    try:
        import PyPDF2
        print("‚úÖ PyPDF2 j√° est√° instalado!")
        return True
    except ImportError:
        print("‚ùå PyPDF2 n√£o est√° instalado")
        return False

def main():
    print("=== INSTALADOR DE DEPEND√äNCIAS - ANALISADOR DOCUMENTAL ===\n")
    
    # Verifica se j√° est√° instalado
    if verificar_instalacao():
        return
    
    print("Tentando instalar PyPDF2...\n")
    
    # Tenta diferentes m√©todos
    metodos = [
        instalar_com_metodo_1,
        instalar_com_metodo_2,
        instalar_com_metodo_3
    ]
    
    for i, metodo in enumerate(metodos, 1):
        print(f"\n--- Tentativa {i} ---")
        if metodo():
            break
        print("Tentando pr√≥ximo m√©todo...\n")
    else:
        print("\n‚ùå Todos os m√©todos online falharam.")
        instalar_com_metodo_4()
    
    # Verifica novamente
    if verificar_instalacao():
        print("\nüéâ Instala√ß√£o conclu√≠da com sucesso!")
    else:
        print("\n‚ö†Ô∏è  A classe funcionar√° com funcionalidades limitadas.")

if __name__ == "__main__":
    main()